!function(e){var n={};function t(o){if(n[o])return n[o].exports;var s=n[o]={i:o,l:!1,exports:{}};return e[o].call(s.exports,s,s.exports,t),s.l=!0,s.exports}t.m=e,t.c=n,t.d=function(e,n,o){t.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:o})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,n){if(1&n&&(e=t(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(t.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var s in e)t.d(o,s,function(n){return e[n]}.bind(null,s));return o},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},t.p="",t(t.s=0)}([function(e,n,t){"use strict";t.r(n);var o,s={general:{extensionName:"sfx",extensionId:"555",chromeExtensionProtocol:"chrome-extension:"},libraries:{PubSub:{portMessageType:"PubSub",urlPattern:"https://*/*"}},services:{},models:{UserOptions:{storageKey:"UserOptions",defaults:{isUrlRewriterOn:!0}}},background:{},content:{},popup:{},options:{}},i=function(){function e(){}return e.init=function(){return chrome.runtime.onMessage.addListener(function(n){n.extensionName===s.general.extensionName&&n.extensionId===s.general.extensionId&&n.messageType===s.libraries.PubSub.portMessageType&&e.emitLocal(n.eventName,n.data)}),e.getIsContentPage()},e.getIsContentPage=function(){return location.protocol!==s.general.chromeExtensionProtocol},e.subscribe=function(n,t){e.callbacksByEvents[n]=e.callbacksByEvents[n]||[],e.callbacksByEvents[n].push(t)},e.unsubscribe=function(n,t){var o=e.callbacksByEvents[n];if(o)for(var s=0;s<o.length;s++)if(o[s]===t){o.splice(s,1);break}},e.emit=function(n,t){void 0===t&&(t={}),e.emitGlobal(n,t),e.emitLocal(n,t)},e.emitLocal=function(n,t){var o=e.callbacksByEvents[n];o&&o.forEach(function(e){e(t)})},e.emitGlobal=function(n,t){e.isContentPage||e.sendMessageToContent(n,t),e.sendMessageToExtension(n,t)},e.sendMessageToExtension=function(e,n){var t=new r(e,n);chrome.runtime.sendMessage(t)},e.sendMessageToContent=function(e,n){var t=new r(e,n);chrome.tabs.query({url:s.libraries.PubSub.urlPattern},function(e){for(var n=0;n<e.length;++n)chrome.tabs.sendMessage(e[n].id,t)})},e.callbacksByEvents={},e.isContentPage=e.init(),e}(),r=function(e,n){this.extensionName=s.general.extensionName,this.extensionId=s.general.extensionId,this.messageType=s.libraries.PubSub.portMessageType,this.eventName=e,this.data=n};!function(e){e.onUserOptionsUpdate="userOptionsUpdate",e.onInitRequest="initDataRequest",e.onInit="initData"}(o||(o={}));var a=s.models.UserOptions.storageKey,u=s.models.UserOptions.defaults,c=function(e){void 0===e&&(e=u.isUrlRewriterOn),this.__key__=a,this.isUrlRewriterOn=e},l=new function(){this.userOptions=new c};i.subscribe(o.onInit,function e(n){i.unsubscribe(o.onInit,e);l.userOptions=n;console.log("on init complete");console.log(l.userOptions)}),i.emit(o.onInitRequest),i.subscribe(o.onUserOptionsUpdate,function(e){l.userOptions=e,console.log("on user options update"),console.log(l.userOptions)})}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,