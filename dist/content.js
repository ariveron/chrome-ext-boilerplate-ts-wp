!function(e){var n={};function t(r){if(n[r])return n[r].exports;var i=n[r]={i:r,l:!1,exports:{}};return e[r].call(i.exports,i,i.exports,t),i.l=!0,i.exports}t.m=e,t.c=n,t.d=function(e,n,r){t.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:r})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,n){if(1&n&&(e=t(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(t.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var i in e)t.d(r,i,function(n){return e[n]}.bind(null,i));return r},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},t.p="",t(t.s=0)}([function(e,n,t){"use strict";t.r(n);var r={pageLinkPortName:"pageLinkPort"},i=function(e,n){this.channel=e,this.message=n},o=function(e,n){var t=this;this.publish=function(e){var n=new i(t.name,e);t.pageLink.broadcast(n)},this.subscribe=function(e){return t.subscribers.push(e),e},this.unsubscribe=function(e){var n=t.subscribers.findIndex(function(n){return n===e});-1!==n&&t.subscribers.splice(n,1)},this.pageLinkListener=function(e,n){e.channel===t.name&&t.subscribers.forEach(function(n){n(e.message)})},this.onDestroy=function(){t.pageLink.removeListener(t.pageLinkListener)},this.pageLink=e,this.name=n,this.subscribers=[],this.pageLink.addListener(this.pageLinkListener)},s=new function(e){var n=this;this.openChannel=function(e){return new o(n.pageLink,e)},this.getContext=function(){var e=window.location.href;return window.chrome&&window.chrome.extension?/^chrome/.test(e)?window==chrome.extension.getBackgroundPage()?"background":"extension":/^https?/.test(e)?"content":void 0:window.location.protocol.replace(":","")},this.pageLink=e}(new function(){var e=this;this.broadcast=function(n){e.port.postMessage(n)},this.addListener=function(n){return e.port.onMessage.addListener(n),n},this.removeListener=function(n){e.port.onMessage.removeListener(n)},this.port=chrome.runtime.connect({name:r.pageLinkPortName})});s.openChannel("test-channel").publish("this is a test from a content page!"),console.log(s.getContext())}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,